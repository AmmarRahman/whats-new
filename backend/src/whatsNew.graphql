type AWSNews {
  additionalFields: AdditionalFields
  author: String
  createdBy: String
  dateCreated: AWSDateTime
  dateUpdated: AWSDateTime
  pk: String!
  sk: String!
  lastUpdatedBy: String
  locale: String
  name: String
  numImpressions: Int
  score: Int
}

type AWSNewsCollection {
  items: [AWSNews]
}

type AdditionalFields {
  contentType: String
  directoryId: String
  headline: String
  headlineUrl: String
  modifiedDate: AWSDateTime
  postBody: String
  postDateTime: AWSDateTime
  postSummary: String
  relatedBlog: String
}

input TableAWSNewsFilterInput {
  pk: TableStringFilterInput
}



input TableStringFilterInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
}


type Query {
  getAWSNews(pk: String!): AWSNews
  listAWSNews(filter: TableAWSNewsFilterInput, limit: Int): AWSNewsCollection
}